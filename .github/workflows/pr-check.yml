name: PR Checks

on: pull_request

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v3
        with:
          node-version:
          cache: 'pnpm'

      - run: pnpm install

      # - name: Comment outdated dependencies on PR
      #   id: outdated
      #   run: |
      #     echo 'outdated<<EOF' >> $GITHUB_OUTPUT
      #     pnpm outdated --format json >> "$GITHUB_OUTPUT" || true
      #     echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment outdated dependencies on PR
        uses: actions/github-script@v7
        # env:
        #   OUTDATED: ${{ steps.outdated.outputs.outdated }}
        with:
          script: |
            try {
            const execOut = await exec.getExecOutput("pnpm", ["outdated", "--json"]);
            console.log(execOut);
            } catch (error) {
              console.log('Error executing pnpm outdated:', error);
            }
            const execOut = await exec.getExecOutput("pnpm", ["outdated", "--json"]);

            console.log(execOut);

            if (!execOut.exitCode || !execOut.stdout || execOut.stdout === '{}') return;
            
            const packages = Object.entries(JSON.parse(execOut.stdout));

            if (packages.length === 0) return;

            let body = `## ⚠️ Outdated Dependencies Detected\n
            Found **${packages.length}** outdated package${packages.length > 1 ? 's' : ''}:\n
            | Package | Current | Wanted | Latest | Type |
            |---------|---------|--------|--------|------|\n`

            for (const [pkg, info] of packages)
              body += `| ${pkg} | ${info.current || '-'} | ${info.wanted || '-'} | ${info.latest || '-'} | ${info.dependencyType || '-'} |\n`;

            body += "\n---\n*Run `pnpm outdated` locally for more details or `pnpm update` to update dependencies.*";
            
            await core.summary.addRaw(body).write();

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });


      - run: |
          echo "## Typecheck" >> $GITHUB_STEP_SUMMARY
          pnpm tsc >> "$GITHUB_STEP_SUMMARY"
        continue-on-error: true
      - run: |
          echo "## Eslint" >> $GITHUB_STEP_SUMMARY
          pnpm lint >> "$GITHUB_STEP_SUMMARY"
        continue-on-error: true
