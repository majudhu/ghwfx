[
	{
		"filePath": "/var/lib/jenkins/workspace/eslint Release/eslint/fullOfProblems.js",
		"messages": [
			{
				"ruleId": "no-unused-vars",
				"severity": 2,
				"message": "'addOne' is defined but never used.",
				"line": 1,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "unusedVar",
				"endLine": 1,
				"endColumn": 16,
				"suggestions": [
					{
						"messageId": "removeVar",
						"data": {
							"varName": "addOne"
						},
						"fix": {
							"range": [0, 94],
							"text": ""
						},
						"desc": "Remove unused variable 'addOne'."
					}
				]
			},
			{
				"ruleId": "use-isnan",
				"severity": 2,
				"message": "Use the isNaN function to compare with NaN.",
				"line": 2,
				"column": 9,
				"nodeType": "BinaryExpression",
				"messageId": "comparisonWithNaN",
				"endLine": 2,
				"endColumn": 17,
				"suggestions": [
					{
						"messageId": "replaceWithIsNaN",
						"fix": {
							"range": [29, 37],
							"text": "!Number.isNaN(i)"
						},
						"desc": "Replace with Number.isNaN."
					},
					{
						"messageId": "replaceWithCastingAndIsNaN",
						"fix": {
							"range": [29, 37],
							"text": "!Number.isNaN(Number(i))"
						},
						"desc": "Replace with Number.isNaN and cast to a Number."
					}
				]
			},
			{
				"ruleId": "space-unary-ops",
				"severity": 2,
				"message": "Unexpected space before unary operator '++'.",
				"line": 3,
				"column": 16,
				"nodeType": "UpdateExpression",
				"messageId": "unexpectedBefore",
				"endLine": 3,
				"endColumn": 20,
				"fix": {
					"range": [57, 58],
					"text": ""
				}
			},
			{
				"ruleId": "semi",
				"severity": 1,
				"message": "Missing semicolon.",
				"line": 3,
				"column": 20,
				"nodeType": "ReturnStatement",
				"messageId": "missingSemi",
				"endLine": 4,
				"endColumn": 1,
				"fix": {
					"range": [60, 60],
					"text": ";"
				}
			},
			{
				"ruleId": "no-else-return",
				"severity": 1,
				"message": "Unnecessary 'else' after 'return'.",
				"line": 4,
				"column": 12,
				"nodeType": "BlockStatement",
				"messageId": "unexpected",
				"endLine": 6,
				"endColumn": 6,
				"fix": {
					"range": [0, 94],
					"text": "function addOne(i) {\n    if (i != NaN) {\n        return i ++\n    } \n      return\n    \n}"
				}
			},
			{
				"ruleId": "indent",
				"severity": 1,
				"message": "Expected indentation of 8 spaces but found 6.",
				"line": 5,
				"column": 1,
				"nodeType": "Keyword",
				"messageId": "wrongIndentation",
				"endLine": 5,
				"endColumn": 7,
				"fix": {
					"range": [74, 80],
					"text": "        "
				}
			},
			{
				"ruleId": "consistent-return",
				"severity": 2,
				"message": "Function 'addOne' expected a return value.",
				"line": 5,
				"column": 7,
				"nodeType": "ReturnStatement",
				"messageId": "missingReturnValue",
				"endLine": 5,
				"endColumn": 13
			},
			{
				"ruleId": "semi",
				"severity": 1,
				"message": "Missing semicolon.",
				"line": 5,
				"column": 13,
				"nodeType": "ReturnStatement",
				"messageId": "missingSemi",
				"endLine": 6,
				"endColumn": 1,
				"fix": {
					"range": [86, 86],
					"text": ";"
				}
			}
		],
		"suppressedMessages": [],
		"errorCount": 4,
		"fatalErrorCount": 0,
		"warningCount": 4,
		"fixableErrorCount": 1,
		"fixableWarningCount": 4,
		"source": "function addOne(i) {\n    if (i != NaN) {\n        return i ++\n    } else {\n      return\n    }\n};",
		"usedDeprecatedRules": [
			{
				"ruleId": "indent",
				"replacedBy": ["@stylistic/indent"],
				"info": {
					"message": "Formatting rules are being moved out of ESLint core.",
					"url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
					"deprecatedSince": "8.53.0",
					"availableUntil": "11.0.0",
					"replacedBy": [
						{
							"message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
							"url": "https://eslint.style/guide/migration",
							"plugin": {
								"name": "@stylistic/eslint-plugin",
								"url": "https://eslint.style"
							},
							"rule": {
								"name": "indent",
								"url": "https://eslint.style/rules/indent"
							}
						}
					]
				}
			},
			{
				"ruleId": "semi",
				"replacedBy": ["@stylistic/semi"],
				"info": {
					"message": "Formatting rules are being moved out of ESLint core.",
					"url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
					"deprecatedSince": "8.53.0",
					"availableUntil": "11.0.0",
					"replacedBy": [
						{
							"message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
							"url": "https://eslint.style/guide/migration",
							"plugin": {
								"name": "@stylistic/eslint-plugin",
								"url": "https://eslint.style"
							},
							"rule": {
								"name": "semi",
								"url": "https://eslint.style/rules/semi"
							}
						}
					]
				}
			},
			{
				"ruleId": "space-unary-ops",
				"replacedBy": ["@stylistic/space-unary-ops"],
				"info": {
					"message": "Formatting rules are being moved out of ESLint core.",
					"url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
					"deprecatedSince": "8.53.0",
					"availableUntil": "11.0.0",
					"replacedBy": [
						{
							"message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
							"url": "https://eslint.style/guide/migration",
							"plugin": {
								"name": "@stylistic/eslint-plugin",
								"url": "https://eslint.style"
							},
							"rule": {
								"name": "space-unary-ops",
								"url": "https://eslint.style/rules/space-unary-ops"
							}
						}
					]
				}
			}
		]
	}
]
